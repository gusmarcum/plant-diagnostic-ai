model:
  arch: minigpt_v2
  model_type: pretrain
  max_txt_len: 1024
  image_size: 448
  end_sym: "</s>"
  llama_model: "/data/AGAI/MiniGPT-4/llama_weights/Llama-2-7b-chat-hf"  # Path to LLaMA-2 weights
  ckpt: "/data/AGAI/MiniGPT-4/checkpoints/checkpoint_stage2.pth"       # Pretrained checkpoint
  use_grad_checkpoint: True
  chat_template: True
  lora_r: 64
  lora_alpha: 16

datasets:
  # Only use COCO-VQA for fine-tuning
  coco_vqa:    
    batch_size: 6
    vis_processor:
      train:
        name: "blip2_image_train"
        image_size: 448
    text_processor:
      train:
        name: "blip_caption"
    sample_ratio: 15  # Ratio of data to sample for training

  # Commented out unused datasets for simplicity
  # multitask_conversation:
  # llava_conversation:
  # unnatural_instruction:
  # refvg:
  # llava_detail:
  # llava_reason:
  # flickr_grounded_caption:
  # flickr_CaptionToPhrase:
  # flickr_ObjectToPhrase:
  # coco_caption:
  # textcaps_caption:
  # refcoco:
  # refcocop:
  # refcocog:
  # invrefcoco:
  # invrefcocop:
  # invrefcocog:
  # ok_vqa:
  # aok_vqa:
  # gqa:
  # ocrvqa:

run:
  task: image_text_pretrain
  # Optimizer settings
  lr_sched: "linear_warmup_cosine_lr"
  init_lr: 1e-5
  min_lr: 1e-6
  warmup_lr: 1e-6
  weight_decay: 0.05
  max_epoch: 10                      # Reduced epochs for simplicity
  num_workers: 6
  warmup_steps: 1000
  iters_per_epoch: 1000
  seed: 42
  output_dir: "/data/AGAI/MiniGPT-4/output"  # Update with your output directory
  amp: True
  resume_ckpt_path: null
  evaluate: False 
  train_splits: ["train"]
  device: "cuda"
  world_size: 1
  dist_url: "env://"
  distributed: True
  wandb_log: True
  job_name: minigptv2_finetune

